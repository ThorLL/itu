swagger: "2.0"
info:
  version: "1.0.0"
  title: "ITU client server system"
host: "localhost:3000"
basePath: "/"
tags:
- name: "student"
- name: "course"
- name: "teacher"
schemes:
- "https"
- "http"
paths:
  /student:
    post:
      tags:
      - "student"
      summary: "Add a new student"
      description: ""
      operationId: "addStudent"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "student object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/student"
      responses:
        "405":
          description: "Invalid input"
      security:
      - studentcourse_auth:
        - "write:students"
        - "read:students"
  /student/{studentId}:
    get:
      tags:
      - "student"
      summary: "Find student by ID"
      description: "Returns a single student"
      operationId: "getStudentById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "studentId"
        in: "path"
        description: "ID of student to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/student"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "student not found"
      security:
      - api_key: []
    put:
      tags:
      - "student"
      summary: "Updated student"
      operationId: "updateStudent"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "studentId"
        in: "path"
        description: "ID of student that need to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Updated student object"
        required: true
        schema:
          $ref: "#/definitions/student"
      responses:
        "400":
          description: "Invalid student supplied"
        "404":
          description: "student not found"
    delete:
      tags:
      - "student"
      summary: "Deletes a student"
      description: ""
      operationId: "deleteStudent"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "studentId"
        in: "path"
        description: "student id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "student not found"
      security:
      - studentcourse_auth:
        - "write:students"
        - "read:students"
  /course:
    post:
      tags:
      - "course"
      summary: "Create course"
      operationId: "createCourse"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created course object"
        required: true
        schema:
          $ref: "#/definitions/course"
      responses:
        default:
          description: "successful operation"
  /course/{courseId}:
    get:
      tags:
      - "course"
      summary: "Get course by ID"
      description: ""
      operationId: "getCourseByID"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "courseId"
        in: "path"
        description: "The course's ID that needs to be fetched."
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/course"
        "400":
          description: "Invalid teachername supplied"
        "404":
          description: "course not found"
    put:
      tags:
      - "course"
      summary: "Updated course"
      operationId: "updateCourse"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "courseId"
        in: "path"
        description: "ID of course that need to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Updated course object"
        required: true
        schema:
          $ref: "#/definitions/course"
      responses:
        "400":
          description: "Invalid course supplied"
        "404":
          description: "course not found"
    delete:
      tags:
      - "course"
      summary: "Delete course"
      operationId: "deleteCourse"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "courseId"
        in: "path"
        description: "ID of course that needs to be deleted"
        required: true
        type: "string"
      responses:
        "400":
          description: "Invalid courseID supplied"
        "404":
          description: "course not found"
  /teacher:
    post:
      tags:
      - "teacher"
      summary: "Create teacher"
      operationId: "createTeacher"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created teacher object"
        required: true
        schema:
          $ref: "#/definitions/teacher"
      responses:
        default:
          description: "successful operation"
  /teacher/{teacherId}:
    get:
      tags:
      - "teacher"
      summary: "Get teacher by ID"
      description: ""
      operationId: "getTeacherByID"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "teacherId"
        in: "path"
        description: "The teacher's ID that needs to be fetched."
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/teacher"
        "400":
          description: "Invalid teachername supplied"
        "404":
          description: "teacher not found"
    put:
      tags:
      - "teacher"
      summary: "Updated teacher"
      operationId: "updateTeacher"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "teacherId"
        in: "path"
        description: "ID of teacher that need to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Updated teacher object"
        required: true
        schema:
          $ref: "#/definitions/teacher"
      responses:
        "400":
          description: "Invalid teacher supplied"
        "404":
          description: "teacher not found"
    delete:
      tags:
      - "teacher"
      summary: "Delete teacher"
      operationId: "deleteTeacher"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "teacherId"
        in: "path"
        description: "ID of teacher that needs to be deleted"
        required: true
        type: "string"
      responses:
        "400":
          description: "Invalid teacherID supplied"
        "404":
          description: "teacher not found"
securityDefinitions:
  studentcourse_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:students: "modify students in your account"
      read:students: "read your students"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  teacher:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      courses:
        type: "string"
      popularityScore:
        type: "integer"
        format: "int64"
    xml:
      name: "teacher"
  student:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      courses:
        type: "string"
    xml:
      name: "student"
  course:
    type: "object"
    required:
    - "courseid"
    - "name"
    - "workload"
    properties:
      courseid:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      workload:
        type: "integer"
        format: "int64"
    xml:
      name: "courseload"